name: Doxygen

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Initialize the environment to generate documentatioN
        shell: bash
        run : >
          sudo apt-get update;
          sudo apt-get install -y doxygen;
          chmod +x ./.github/workflows/env_linux.sh;
          ./.github/workflows/env_linux.sh

      - name: Create Build Environment
        # We create a subdirectory that will stand as our working directory for all
        # subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: >
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release
          -DWITH_TEST=ON
          -DWITH_DOC=ON
          -DGLPK_LIB=${{github.workspace}}/spack/opt/spack/glpk/lib
          -DGLPK_INC=${{github.workspace}}/spack/opt/spack/glpk/include

      - name: Build doc
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
       # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --target doxygen

      - name: Commit doxygen documentation
        working-directory: ${{github.workspace}}/
        run: |
          mkdir ${{github.workspace}}/docs/doxygen;
          cp -r build/docs/doxygen_output/html/* ${{github.workspace}}/docs/doxygen;
          git config --global user.name 'franck.ledoux';
          git config --global user.email 'franck.ledoux@users.noreply.github.com';
          git add docs/*;
          git commit -am "Automated doxygen upate";
          git push;
