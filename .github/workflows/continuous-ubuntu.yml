name: continuous-ubuntu

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  CODECOV_TOKEN: 'a6611bcf-89ee-410d-acfa-d4f130b31365'
jobs:
  Continuous:
    name: ${{ matrix.config }}
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Linux, Windows or Mac. 
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on:  ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Release, Debug]
    
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Initialize the dev environement
      run : chmod +x ./.github/workflows/env_linux.sh; ./.github/workflows/env_linux.sh
    
    - name: Create Build Environment
      # We create a subdirectory that will stand as our working directory for all 
      # subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: >
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.config }} 
        -DWITH_CODE_COVERAGE=ON 
        -DCMAKE_PREFIX_PATH=${{github.workspace}}/spack/opt/spack/lcov 
        -DGLPK_LIB=${{github.workspace}}/spack/opt/spack/glpk/lib 
        -DGLPK_INC=${{github.workspace}}/spack/opt/spack/glpk/include

    - name: Build
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{ matrix.config }}

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: |
          if ${{ matrix.config == 'Release'}}; then
              ctest -C $BUILD_TYPE
          else
              export CODACY_PROJECT_TOKEN=6812888e69b348239217c607f514f024
              make code_cover_gmds
              bash <(curl -s https://codecov.io/bash)
              bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r code_cover_gmds.info

          fi
      
