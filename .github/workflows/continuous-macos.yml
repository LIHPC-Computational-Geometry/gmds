name: macos-ci

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  Continuous:
    name: ${{ matrix.config }}
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Linux, Windows or Mac. 
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on:  macos-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Release, Debug]
        #include:
        #  - os: macos-latest
        #    name: macOS
        #    script_name: ./.github/workflows/env_macos.sh
        #  - os: ubuntu-latest
        #    name: Linux
        #    script_name: ./.github/workflows/env_linux.sh
        #  - os: windows-latest
        #    name: Windows
        #    script_name: ./.github/workflows/env_win.cmd
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Initialize the dev environement
      run : chmod +x ./.github/workflows/env_macos.sh; ./.github/workflows/env_macos.sh
    
    - name: Create Build Environment
      # We create a subdirectory that will stand as our working directory for all 
      # subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run:  cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.config }}
        -DWITH_CGNS:BOOL=OFF
        -DWITH_CODE_COVERAGE=OFF
        -DWITH_PYTHON_API=ON
        -DENABLE_BLOCKING=true
        -DCMAKE_PREFIX_PATH="${{github.workspace}}/spack/opt/spack/lcov;${{github.workspace}}/spack/opt/spack/glpk;${{github.workspace}}/spack/opt/spack/googletest;${{github.workspace}}/spack/opt/spack/py-pybind11;${{github.workspace}}/spack/opt/spack/cgal;${{github.workspace}}/spack/opt/spack/gmp;${{github.workspace}}/spack/opt/spack/mpfr;${{github.workspace}}/spack/opt/spack/boost"
        -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/
        -DGLPK_LIB=${{github.workspace}}/spack/opt/spack/glpk/lib
        -DGLPK_INC=${{github.workspace}}/spack/opt/spack/glpk/include

    - name: Build
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake --build . --config ${{ matrix.config }}

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: |
        if ${{ matrix.config == 'Release'}}; then
            ctest -E SingGraphBuilder2DTest.halfDisk
        else
            ctest -E SingGraphBuilder2DTest.halfDisk
        fi
