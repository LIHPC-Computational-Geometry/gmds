name: continuous

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  Continuous:
    name: ${{ matrix.name }} (${{ matrix.config }})
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Linux, Windows or Mac. 
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        #, macos-latest, windows-latest]
        config: [Release, Debug]
        include:
          - os: macos-latest
            name: macOS
            script_name: ./.github/workflows/env_linux.sh
          - os: ubuntu-latest
            name: Linux
            script_name: ./.github/workflows/env_linux.sh
          - os: windows-latest
            name: Windows
            script_name: ./.github/workflows/env_win.cmd
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Initialize the dev environement
      run : chmod +x ${{ matrix.script_name }}; ${{ matrix.script_name }} 
    
    - name: Create Build Environment
      # We create a subdirectory that will stand as our working directory for all 
      # subsequent commands
      
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.config }} -DWITH_CODE_COVERAGE=ON -DCMAKE_PREFIX_PATH=${{github.workspace}}/spack/opt/spack/lcov

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{ matrix.config }}

    - name: Test-release
      if: matrix.config == 'Release'
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: make test    
      
    - name: Test-debug
      if: matrix.config == 'Debug'
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: make code_cover_gmds
